// <auto-generated />
using System;
using Cretu_Alexandru_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cretu_Alexandru_Project.Migrations
{
    [DbContext(typeof(Cretu_Alexandru_ProjectContext))]
    [Migration("20230107123800_Sali2")]
    partial class Sali2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Cretu_Alexandru_Project.Models.Echipament", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("TipEchipament")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Echipament");
                });

            modelBuilder.Entity("Cretu_Alexandru_Project.Models.Reprezentant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Reprezentant");
                });

            modelBuilder.Entity("Cretu_Alexandru_Project.Models.Rezervare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("DataInceput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSfarsit")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SalaID")
                        .HasColumnType("int");

                    b.Property<int?>("TrupaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SalaID");

                    b.HasIndex("TrupaID");

                    b.ToTable("Rezervare");
                });

            modelBuilder.Entity("Cretu_Alexandru_Project.Models.RezervareEchipament", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("EchipamentID")
                        .HasColumnType("int");

                    b.Property<int>("RezervareID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EchipamentID");

                    b.HasIndex("RezervareID");

                    b.ToTable("RezervareEchipament");
                });

            modelBuilder.Entity("Cretu_Alexandru_Project.Models.Sala", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Locatie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeSala")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("Suprafata")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Sala");
                });

            modelBuilder.Entity("Cretu_Alexandru_Project.Models.Trupa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("NumeTrupa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReprezentantID")
                        .HasColumnType("int");

                    b.Property<int>("numarPersoane")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ReprezentantID");

                    b.ToTable("Trupa");
                });

            modelBuilder.Entity("Cretu_Alexandru_Project.Models.Rezervare", b =>
                {
                    b.HasOne("Cretu_Alexandru_Project.Models.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("SalaID");

                    b.HasOne("Cretu_Alexandru_Project.Models.Trupa", "Trupa")
                        .WithMany()
                        .HasForeignKey("TrupaID");

                    b.Navigation("Sala");

                    b.Navigation("Trupa");
                });

            modelBuilder.Entity("Cretu_Alexandru_Project.Models.RezervareEchipament", b =>
                {
                    b.HasOne("Cretu_Alexandru_Project.Models.Echipament", "Echipament")
                        .WithMany("RezervareEchipamente")
                        .HasForeignKey("EchipamentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cretu_Alexandru_Project.Models.Rezervare", "Rezervare")
                        .WithMany("RezervareEchipamente")
                        .HasForeignKey("RezervareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Echipament");

                    b.Navigation("Rezervare");
                });

            modelBuilder.Entity("Cretu_Alexandru_Project.Models.Trupa", b =>
                {
                    b.HasOne("Cretu_Alexandru_Project.Models.Reprezentant", "Reprezentant")
                        .WithMany()
                        .HasForeignKey("ReprezentantID");

                    b.Navigation("Reprezentant");
                });

            modelBuilder.Entity("Cretu_Alexandru_Project.Models.Echipament", b =>
                {
                    b.Navigation("RezervareEchipamente");
                });

            modelBuilder.Entity("Cretu_Alexandru_Project.Models.Rezervare", b =>
                {
                    b.Navigation("RezervareEchipamente");
                });
#pragma warning restore 612, 618
        }
    }
}
